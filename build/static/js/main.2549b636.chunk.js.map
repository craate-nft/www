{"version":3,"sources":["components/Loading.js","components/contractHelpers.js","pages/Bottle.js","components/Overlays.js","components/ProgressBar.js","components/PageInfoPanel.js","pages/PuzzleViewer.js","components/TileStore.js","pages/Batches.js","pages/About.js","pages/MainLayout.js","components/Footer.js","components/Connectors.ts","App.js","components/Hooks.ts","registerServiceWorker.js","index.js","svg/buy.svg","svg/opensea-logo.svg","svg/reddit.svg","svg/discord.svg","svg/github.svg","svg/twitter.svg","svg/collect.svg","svg/puzzle.svg","svg/salary.svg"],"names":["Loading","props","className","message","length","prettyfyId","strId","s","zs","ze","i","lenLeft","nftId","id","Number","toString","padStart","bottleImgUri","bottleDataUri","getAllBatchInfo","bottle","user","numBatches","a","batches","batch","getBatchInfo","push","getTokenBalance","balanceOf","_b","totalSupply","_t","balance","supply","batchInfo","_batchInfo","maxBottles","numBottles","ethCost","getBottleInfo","bottleDescJSON","fetch","rsp","json","BottleInner","prettyId","useState","desc","setDesc","tokInfo","setTokInfo","then","name","src","alt","description","toNumber","target","rel","href","address","OpenSeaLogo","Bottle","useParams","intId","parseInt","Web3","require","Modal","utils","toBN","ReactDOM","createPortal","onClick","doClose","e","stopPropagation","children","document","querySelector","useInput","type","def","value","setValue","onChange","useEscapeKey","onEscape","useEffect","handleEsc","event","keyCode","window","addEventListener","removeEventListener","MintBottleModal","costWei","toWei","costInEther","numToBuy","numToBuyInput","isTxPending","setTxPending","undefined","tx","setTx","err","setErr","mintBottleForETH","bottleWrapper","buyBottlesForETH","batchId","from","catch","updateBatchInfo","closeModal","close","console","log","BottlePreviewModal","tokenId","ProgressBar","total","count","barStyle","width","height","marginLeft","marginRight","marginTop","background","display","justifyContent","border","progressStyle","style","alignItems","position","fontSize","left","top","ConnectWallet","connect","PageInfoPanel","useHistory","error","activating","connected","connectWallet","active","contractsLoaded","errMsg","NoEthereumProviderError","UnsupportedChainIdError","UserRejectedRequestErrorInjected","location","reload","Tile","estile","chainId","updateFn","setBalance","setTotal","result","preview","PuzzleViewer","history","sid","pid","namer","network","sceneId","puzzleId","sceneLoading","setSceneLoading","sceneDesc","setSceneDesc","buyTilesForSceneId","setBuyBottlesForBatchId","previewTokenId","setPreviewTokenId","ownedTokens","setOwnedTokens","ownedTokensAllLoaded","setOwnedTokensAllLoaded","resetOwnedTokenState","updateOwnedTokens","useCallback","tdesc","Object","keys","canvasRef","useRef","puzzleToken","setPuzzleToken","updatePuzzleToken","current","hasBackground","ownsSolvedToken","draw","context","ptok","puzzleTokenStart","canvas","img","Image","onload","drawImage","drawnTokens","tok","tileJSON","tileMeta","timg","th","attributes","tw","ty","this","image","puzzleNamer","setPuzzleNamer","puzzleName","setPuzzleName","showPuzzleNaming","setShowPuzzleNaming","puzzleNamingCost","setPuzzleNamingCost","newPuzzleName","newPuzzleNameInput","refreshPuzzleNameInfo","getScenePuzzleInfo","solvePuzzle","redeemPuzzle","renamePuzzle","nameScenePuzzle","updateNamingInfo","getContext","gotoScene","_sid","_pid","prevSceneClass","nextSceneClass","numScenes","prevPuzzleClass","nextPuzzleClass","numPuzzles","puzzleTokenRow","setPuzzleTokenRow","puzzleTileTokenRows","setPuzzleTileTokenRows","puzzleTokenId","tileTokenOffset","tilesPerPuzzle","tileTokenStart","key","tileRows","uniqueTokensOwned","setUniqueTokensOwned","setTotalTokensLoaded","gt","web3","scene","flexGrow","ref","data-tip","data-for","arrowColor","place","BuySVG","TileStore","isLoading","setLoading","setBatches","buyBottlesForBatchId","fromWei","setCostInEther","sidx","found","_batches","map","bdesc","batchesDOM","cEth","Batches","role","aria-label","FAQSection","open","show","setShow","glyph","question","About","Redirect","to","MainLayout","exact","path","page","Footer","RedditSVG","DiscordSVG","TwitterSVG","GitHubSVG","injected","InjectedConnector","supportedChainIds","App","acct","size","useWeb3React","connector","account","activate","getNetwork","networkName","prettyAddress","substring","React","activatingConnector","setActivatingConnector","suppress","ethereum","on","handleConnect","handleChainChanged","handleAccountsChanged","accounts","handleNetworkChanged","networkId","removeListener","useInactiveListener","tried","setTried","isAuthorized","useEagerConnect","setContractsLoaded","setNumBatches","setBottleContract","setBottleWrapperContract","contract","BottleABI","_Bottle","BottleWrapperABI","_BottleWrapper","setProvider","currentProvider","deployed","cBottle","cBottleWrapper","setupContracts","setupBalances","batchCount","allEvents","connectInjectedWallet","appStatus","activeClassName","marginBottom","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","render","getLibrary","provider","library","Web3Provider","pollingInterval","getElementById","URL","process","origin","response","status","headers","get","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.2549b636.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Loading.css\";\n\n////////////////////////////////////////////////////////////////////////////////\n\nexport const Loading = (props) => {\n  return (\n    <div className=\"App-loading\">\n      <div className=\"message\">{props.message}</div>\n      {props.message && props.message.length > 0 &&\n        <div className=\"loading-animation\">\n          <div></div><div></div><div></div>\n        </div>\n      }\n    </div>\n  );\n}\n\n////////////////////////////////////////////////////////////////////////////////","import Web3 from \"web3\";\n\nexport const prettyfyId = (strId) => {\n  let s = \"0x\";\n  let zs = strId.length;\n  let ze = 0;\n  for (var i = 0; i < strId.length; i++) {\n    if (strId[i] === '0' && i < zs) zs = i;\n    if (strId[i] === '0' && i > ze) ze = i;\n  }\n  if (zs < 4) zs = 4;\n  let lenLeft = 64 - ze;\n  if (lenLeft < 5) {\n    ze -= (5 - lenLeft);\n  }\n  for (i = 0; i < strId.length; i++) {\n    if (i === zs) { s += \"...\"; }\n    if (i <= ze && i >= zs) continue;\n    s += strId[i];\n  }\n  return s;\n}\n\nexport const nftId = (id) => {\n  return Number(id).toString(16).padStart(64, 0);\n}\n\nexport const bottleImgUri = (id) => {\n  return \"https://raw.githubusercontent.com/craate-nft/metadata/master/bottle/\"+nftId(id)+\".gif\";\n}\n\nexport const bottleDataUri = (id) => {\n  return \"https://raw.githubusercontent.com/craate-nft/metadata/master/bottle/\"+nftId(id)+\".json\";\n}\n\n// export const packImgUri = (id) => {\n//   return \"https://raw.githubusercontent.com/craate-nft/metadata/master/pack/\"+nftId(id)+\".png\";\n// }\n\n// export const packGifUri = () => {\n//   return \"https://raw.githubusercontent.com/craate-nft/metadata/master/img/rift-seethru.gif\";\n// }\n\n////////////////////////////////////////////////////////////////////////////////\n\nexport const getAllBatchInfo = async (bottle, user, numBatches) => {\n  let batches = [];\n  for (var batch = 1; batch <= numBatches; batch++) {\n    batches.push(await getBatchInfo(bottle, user, batch));\n  }\n  return batches;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nexport const getTokenBalance = async (bottle, user, batch) => {\n  const _b = await bottle.balanceOf(user, batch);\n  const _t = await bottle.totalSupply(batch);\n  return {\n    balance: _b,\n    supply: _t,\n  }\n}\n\nexport const getBatchInfo = async (bottle, user, batch) => {\n  const _batchInfo = await bottle.batchInfo(batch);\n  const _b = await bottle.balanceOf(user, batch);\n  return {\n    batch: batch,\n    balance: _b,\n    maxBottles: _batchInfo[0],\n    numBottles: _batchInfo[1],\n    ethCost: _batchInfo[2],\n  };\n}\n\n\n////////////////////////////////////////////////////////////////////////////////\n","import React, {useState} from \"react\";\nimport {useParams} from \"react-router-dom\";\n\nimport {Loading} from \"../components/Loading.js\";\nimport {bottleDataUri, bottleImgUri, nftId, prettyfyId, getTokenBalance} from \"../components/contractHelpers.js\";\n\nimport OpenSeaLogo from '../svg/opensea-logo.svg';\n\nconst getBottleInfo = async (id) => {\n  const bottleDescJSON = bottleDataUri(id);\n  const rsp = await fetch(bottleDescJSON);\n  return await rsp.json();\n}\n\nexport const BottleInner = (props) => {\n  const prettyId = prettyfyId(nftId(props.id));\n  const [desc, setDesc] = useState();\n  const [tokInfo, setTokInfo] = useState();\n\n  if (!desc && props.user && props.bottle) {\n    getBottleInfo(props.id)\n      .then(setDesc);\n  }\n  if (!tokInfo && props.user && props.bottle) {\n    getTokenBalance(props.bottle, props.user, props.id)\n      .then(setTokInfo);\n  }\n\n  if (!desc || !tokInfo) {\n    return (\n      <div className=\"Shard-main\">\n        <Loading message=\"Fetching bottle details\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"shard-main\">\n      <div className=\"shard-header\">\n        {desc.name}\n        <span className=\"grow\" />\n      </div>\n      <div className=\"bg\">\n        <img src={bottleImgUri(props.id)} alt={props.id} />\n      </div>\n      <p>{desc.description}</p>\n      <p>The NFT id for this bottle is {prettyId}.</p>\n      {tokInfo.supply.toNumber() > 0 && <>\n        <p>There are currently {tokInfo.supply.toString()} of these bottles in existence, and you own {tokInfo.balance.toString()} of them!</p>\n        <div className=\"social-link\">\n          <div>View this NFT on: </div>\n          <div>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href={\"https://opensea.io/assets/\"+props.bottle.address+\"/\"+props.id}>\n              <img src={OpenSeaLogo} alt=\"OpenSea\" /><span>OpenSea</span>\n            </a>\n          </div>\n        </div>\n      </>}\n      {tokInfo.supply.toNumber() === 0 && <>\n        <p>There are no copies of this token in existence! Once minted, it will be visible for trade on OpenSea etc.</p>\n      </>}\n    </div>\n  );\n}\n\n/*\n *  If we end up rendering shards as a separate page, use this component to\n *  wrap the `BottleInner` and parse the hex string etc from the URL params.\n */\nexport const Bottle = (props) => {\n  let {id} = useParams();\n  const intId = parseInt(id, 16);\n  return (\n    <div className=\"shard-page\">\n      <BottleInner {...props} id={intId} />\n    </div>\n  );\n}\n\nexport default Bottle;","import React, {useState, useEffect} from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport {BottleInner} from \"../pages/Bottle.js\";\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar Web3 = require(\"web3\");\nconst toBN = Web3.utils.toBN;\n\n////////////////////////////////////////////////////////////////////////////////\n\nexport const Modal = (props) => {\n  return ReactDOM.createPortal(\n    <div className=\"modal\" onClick={()=>{props.doClose && props.doClose()}}>\n      <div className=\"modal-body\" onClick={(e)=>{e.stopPropagation()}}>\n        {props.children}\n      </div>\n    </div>,\n    document.querySelector(\"#modal\"));\n}\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nexport const useInput = (type, def) => {\n  const [value, setValue] = useState(def);\n  const input = <input value={value}\n                        onChange={e => setValue(e.target.value)}\n                        type={type} />;\n  return [value, input];\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nexport const useEscapeKey = (onEscape) => {\n  useEffect(() => {\n    const handleEsc = (event) => {\n      if (event.keyCode === 27)\n        onEscape();\n      };\n      window.addEventListener(\"keydown\", handleEsc);\n\n      return () => {\n        window.removeEventListener(\"keydown\", handleEsc);\n      };\n    }, [onEscape]);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nexport const MintBottleModal = (props) => {\n  const costWei = Web3.utils.toWei(props.costInEther, \"ether\")\n  const [numToBuy, numToBuyInput] = useInput(\"number\", 1);\n  const [isTxPending, setTxPending] = useState(false);\n  const [tx, setTx] = useState(undefined);\n  const [err, setErr] = useState(undefined);\n\n  //////////////////////////////////////////////////////////////////////////////\n\n  const mintBottleForETH = async () => {\n    setTx(undefined);\n    setTxPending(true);\n\n    const rsp = await props.bottleWrapper.buyBottlesForETH(props.batchId, numToBuy, {\n      value: costWei * numToBuy,\n      from: props.user\n    }).catch((err) => {\n      setErr(err)\n    });\n\n    if (rsp) {\n      setTx(rsp.tx);\n      setTxPending(false);\n      props.updateBatchInfo(props.batchId);\n    }\n  }\n\n  //////////////////////////////////////////////////////////////////////////////\n\n  const closeModal = () => {\n    setErr(undefined);\n    setTxPending(false);\n    setTx(undefined);\n    props.close();\n  }\n\n  useEscapeKey(() => closeModal());\n\n  console.log(costWei)\n\n  // const ethBottleCost = props.costInEther;\n  // const bnNumToBuy = toBN(numToBuy.toString());\n  // const ethCostWei = ethBottleCost.mul(bnNumToBuy);\n  // const ethCost = Web3.utils.fromWei(ethCostWei, \"ether\").toString();\n\n  return (\n    <>\n      {props.batchId >= 0 &&\n        <Modal doClose={()=>{closeModal()}}>\n          <div className=\"BottleStore-modal\">\n            <h1>Minting bottles from batch {props.batchId}</h1>\n            <br></br>\n            {!isTxPending && !tx &&\n              <>\n                <div className=\"col\">\n                  <div>Number of bottles to mint:</div>\n                </div>\n                <div className=\"col input-div\">\n                  {numToBuyInput}\n                </div>\n              </>}\n              {isTxPending && !tx &&\n                <div className=\"col\">\n                  <div>Transaction pending ...</div>\n                </div>\n              }\n              {!isTxPending && tx &&\n                <div className=\"col\">\n                  <div><a className=\"clickable\" href={\"https://etherscan.io/tx/\"+tx}>view tx etherscan</a></div>\n                </div>\n              }\n              <>\n                <br></br>\n                <div className=\"col\">\n                  {!isTxPending && !tx && <>\n                    <div className=\"clickable\" onClick={() => {mintBottleForETH();}}>Use {props.costInEther} ETH</div>\n                  </>}\n                  {err &&\n                    <div className=\"col\">\n                      <div>Uh oh, thats an error ...</div>\n                    </div>\n                  }\n                  <div className=\"grow\"></div>\n                  <div className=\"clickable\" onClick={() => {closeModal()}}>CLOSE</div>\n                </div>\n              </>\n          </div>\n        </Modal>\n      }\n    </>\n  );\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nexport const BottlePreviewModal = (props) => {\n\n  useEscapeKey(() => props.close());\n\n  return (\n    <>\n      {props.tokenId > 0 &&\n        <Modal>\n          <div className=\"BottleStore-modal\">\n            <BottleInner {...props} id={props.tokenId} />\n            <br></br>\n            <div className=\"col\">\n              <div className=\"grow\"></div>\n              <div className=\"clickable\" onClick={() => {props.close()}}>CLOSE</div>\n            </div>\n          </div>\n        </Modal>\n      }\n    </>\n  );\n}\n\n////////////////////////////////////////////////////////////////////////////////","import React from \"react\";\n\nexport const ProgressBar = (props) => {\n  if (!props.total) return (<>...</>);\n  const count = props.count || 0;\n  const barStyle = {\n    width: props.width || \"120px\",\n    height: props.height || \"24px\",\n    marginLeft: \"10px\",\n    marginRight: \"10px\",\n    marginTop: \"4px\",\n    background: \"black\",\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    border: \"1px solid var(--color-background)\",\n  };\n  const progressStyle = {\n    background: \"var(--color-special)\",\n    border: \"1px solid var(--color-font)\",\n    width: (100*(count / props.total))+\"%\",\n  };\n  const statusStyle = {\n    height: \"24px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    fontSize: \"10pt\",\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"5px\",\n  };\n  const containerStyle = {\n    display: \"flex\",\n    alignItems: \"center\",\n    position: \"relative\",\n  }\n\n  return (\n    <div className=\"progressbar-container\" style={containerStyle}>\n      <div className=\"progressbar\" style={barStyle}>\n        <div className=\"progress\" style={progressStyle}>\n        </div>\n      </div>\n      <div className=\"status\" style={statusStyle}>\n        {count} / {props.total}\n      </div>\n    </div>\n  )\n}","\nimport React from \"react\";\nimport { useHistory } from \"react-router\";\n\nimport {Loading} from \"./Loading.js\";\n\nimport { UnsupportedChainIdError } from \"@web3-react/core\"\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\n} from \"@web3-react/injected-connector\"\n\nconst decodeError = (err) => {\n  if (err instanceof NoEthereumProviderError) {\n    return \"No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.\"\n  } else if (err instanceof UnsupportedChainIdError) {\n    console.log(err)\n    return \"You're connected to an unsupported network.\"\n  } else if (err instanceof UserRejectedRequestErrorInjected) {\n    return \"Please authorize this website to access your Ethereum account.\"\n  } else if (err !== undefined) {\n    console.error(err)\n    return \"An unknown error occurred. Check the console for more details.\"\n  }\n  return undefined;\n}\n\nexport const ConnectWallet = (props) => {\n  return (\n    <div className=\"info\">\n      <p><span className=\"clickable\" onClick={()=>{props.connect()}}>Connect wallet </span> to continue.</p>\n      <p>Check out our <a className=\"clickable\" href=\"/#/about\">FAQ</a> to learn more.</p>\n  </div>\n  )\n}\n\nexport const PageInfoPanel = (props) => {\n  let history = useHistory();\n  const {error, activating, connected, connectWallet, active, contractsLoaded} = props;\n  const errMsg = decodeError(error);\n  return (\n    <div className=\"info-main\">\n      {error && errMsg &&\n        <div className=\"err\">\n          {errMsg}\n          <div onClick={()=>{window.location.reload()}} className=\"clickable\">try again.</div>\n        </div>\n      }\n      {!activating && !connected &&\n        <ConnectWallet connect={connectWallet} />\n      }\n      {activating && !connected &&\n        <Loading message=\"Connecting to wallet\" />\n      }\n      {active && connected && !contractsLoaded &&\n        <Loading message=\"Loading contracts\" />\n      }\n    </div>\n  )\n}","import React, {useState, useRef, useEffect, useCallback} from \"react\";\nimport { useParams } from \"react-router\";\nimport { useHistory } from \"react-router-dom\";\nimport ReactTooltip from \"react-tooltip\";\n\nimport web3 from \"web3\";\n\nimport {Loading} from \"../components/Loading.js\";\nimport {useInput} from \"../components/Overlays.js\";\nimport {ProgressBar} from \"../components/ProgressBar.js\";\nimport {getBatchInfo, getTokenBalance, nftId, prettyfyId, bottleImgUri, bottleDataUri} from \"../components/contractHelpers.js\";\nimport {MintBottleModal, BottlePreviewModal} from \"../components/Overlays.js\";\nimport {PageInfoPanel} from \"../components/PageInfoPanel.js\";\n\nimport BuySVG from \"../svg/buy.svg\";\n\n////////////////////////////////////////////////////////////////////////////////\n\nconst Tile = (props) => {\n  const {estile, user, chainId, id, type, updateFn} = props;\n  const [balance, setBalance] = useState(\"...\");\n  const [total, setTotal] = useState(\"...\");\n\n  // When the contract, user or tile id change, update its balance etc.\n  useEffect(() => {\n    getTokenBalance(estile, user, id)\n      .then((result) => {\n        setBalance(result.balance);\n        setTotal(result.supply);\n        if (updateFn) {\n          updateFn(id, {\n            id: id,\n            balance: result.balance,\n            total: result.supply,\n          });\n        }\n      });\n    }, [estile, chainId, user, id, updateFn, setBalance, setTotal]);\n\n  return (\n    <div className=\"th shard-row\" onClick={()=>{props.preview(id)}}>\n      <div><img src={bottleImgUri(id)} alt=\"\" width=\"42px\" height=\"auto\"></img> ({type})</div>\n      <div>{balance.toString()}</div>\n      <div>{total.toString()}</div>\n      <div>{prettyfyId(nftId(id))}</div>\n    </div>\n  );\n}\n////////////////////////////////////////////////////////////////////////////////\n\nconst PuzzleViewer = (props) => {\n  let history = useHistory();\n  let {sid, pid} = useParams();\n  const {namer, estile, network, chainId, user} = props;\n\n  const sceneId = sid;\n  const puzzleId = parseInt(pid) - 1; // 0-based\n  const [sceneLoading, setSceneLoading] = useState(true);\n  const [sceneDesc, setSceneDesc] = useState({});\n  const [buyTilesForSceneId, setBuyBottlesForBatchId] = useState(0);\n  const [previewTokenId, setPreviewTokenId] = useState(0);\n\n  const [ownedTokens, setOwnedTokens] = useState({});\n  const [ownedTokensAllLoaded, setOwnedTokensAllLoaded] = useState(false);\n  const resetOwnedTokenState = () => {\n    setOwnedTokensAllLoaded(false);\n    setOwnedTokens({});\n  }\n\n  const updateOwnedTokens = useCallback((id, tdesc) => {\n    ownedTokens[id] = tdesc;\n    setOwnedTokens(ownedTokens);\n    if (Object.keys(ownedTokens).length === 12) { // HACK\n      setOwnedTokensAllLoaded(true);\n    } else if (Object.keys(ownedTokens).length === 0) {\n      setOwnedTokensAllLoaded(false);\n    }\n  }, [ownedTokens, setOwnedTokens, setOwnedTokensAllLoaded]);\n\n  //////////////////////////////////////////////////////////////////////////////\n\n  const canvasRef = useRef(null);\n\n  const [puzzleToken, setPuzzleToken] = useState({});\n  const updatePuzzleToken = useCallback((id, tdesc) => {\n    if (canvasRef.current.hasBackground !== id) canvasRef.current.hasBackground = undefined;\n    setPuzzleToken(tdesc);\n  }, [canvasRef]);\n\n  //////////////////////////////////////////////////////////////////////////////\n\n  const ownsSolvedToken = puzzleToken && puzzleToken.balance && puzzleToken.balance.toNumber() > 0;\n\n  //////////////////////////////////////////////////////////////////////////////\n\n  const draw = useCallback(async (context, reset=false) => {\n    if (sceneDesc.sceneId === undefined) return;\n    const ptok = sceneDesc.puzzleTokenStart + puzzleId;\n    const canvas = canvasRef.current;\n    if (!canvas.hasBackground && puzzleToken.balance !== undefined) {\n      var img = new Image();\n      img.width = 1920;\n      img.height = 1080;\n      img.onload = async () => {\n        context.drawImage(img, 0, 0);\n        canvas.hasBackground = ptok;\n        canvas.drawnTokens = {};\n        draw(context);\n      }\n      img.src = bottleImgUri(ptok, ownsSolvedToken === false); // enable bw mode for non owned tokens.\n    }\n\n    if (canvas.hasBackground) {\n      for (let tok of Object.keys(ownedTokens)) {\n        // Tokens with no ownership are not drawn.\n        if (ownedTokens[tok].balance.toNumber() === 0) continue;\n\n        // Tokens drawn after a clear are not updated if they have also been drawn.\n        if (tok in canvas.drawnTokens) continue;\n        canvas.drawnTokens[tok] = true;\n        const tileJSON = bottleDataUri(tok);\n        const rsp = await fetch(tileJSON);\n        const tileMeta = await rsp.json();\n\n        var timg = new Image();\n        timg.th = tileMeta.attributes[0][\"value\"];\n        timg.tw = tileMeta.attributes[1][\"value\"];\n        timg.tx = tileMeta.attributes[2][\"value\"];\n        timg.ty = tileMeta.attributes[3][\"value\"];\n        timg.width = timg.tw;\n        timg.height = timg.th;\n        timg.onload = function() {\n          context.drawImage(this, this.tx - this.tw / 2, this.ty - this.th / 2);\n        }\n        timg.src = tileMeta.image;\n      }\n    }\n  }, [sceneDesc, puzzleToken, ownedTokens, network, chainId, ownsSolvedToken, puzzleId]);\n\n  //////////////////////////////////////////////////////////////////////////////\n\n  const [puzzleNamer, setPuzzleNamer] = useState(\"\");\n  const [puzzleName, setPuzzleName] = useState(\"Unnamed\");\n  const [showPuzzleNaming, setShowPuzzleNaming] = useState(false);\n  const [puzzleNamingCost, setPuzzleNamingCost] = useState(0);\n  const [newPuzzleName, newPuzzleNameInput] = useInput(\"text\", \"\");\n\n  const refreshPuzzleNameInfo = async (sid, pid) => {\n    const result = await namer.getScenePuzzleInfo(sid, pid);\n    setPuzzleNamingCost(result[0].toNumber());\n    if (result[1] === \"\") setPuzzleName(\"Unnamed\");\n    else setPuzzleName(result[1]);\n    setPuzzleNamer(result[2]);\n  }\n\n  const solvePuzzle = async (sid, pid) => {\n    await estile.redeemPuzzle(sid, pid, {from: user});\n  }\n\n  const renamePuzzle = async (sid, pid, name) => {\n    await namer.nameScenePuzzle(sid, pid, name, {from: user});\n    refreshPuzzleNameInfo(sid, pid);\n  }\n\n  //////////////////////////////////////////////////////////////////////////////\n\n  useEffect(() => {\n    async function updateNamingInfo() {\n      if (!namer) return;\n      const result = await namer.getScenePuzzleInfo(sceneId, puzzleId);\n      setPuzzleNamingCost(result[0].toNumber());\n      if (result[1] === \"\") setPuzzleName(\"Unnamed\");\n      else setPuzzleName(result[1]);\n      setPuzzleNamer(result[2]);\n    }\n    updateNamingInfo();\n  }, [sceneId, puzzleId, namer, network, chainId]);\n\n  // If the user changes, reload the scene.\n  useEffect(() => {\n    setSceneLoading(true);\n    resetOwnedTokenState();\n  }, [user, chainId, network]);\n\n  useEffect(() => {\n    if (sceneLoading) return;\n    const canvas = canvasRef.current\n    const context = canvas.getContext(\"2d\")\n    draw(context);\n  }, [draw, sceneId, puzzleId, sceneLoading, ownedTokens, ownedTokensAllLoaded,\n      puzzleToken, sceneDesc, network, chainId, user]);\n\n  //////////////////////////////////////////////////////////////////////////////\n\n  const gotoScene = async (_sid, _pid) => {\n    setShowPuzzleNaming(false);\n    if (_sid !== sceneId) setSceneLoading(true);\n    if (_pid !== puzzleId) resetOwnedTokenState(); // reset - ing puzzles.\n    history.push(\"/scene/\" + _sid + \"/puzzle/\" + (_pid+1));\n  }\n  const prevScene = () => { if (sceneId > 1) gotoScene(sceneId - 1, 0); }\n  const nextScene = () => { if (sceneId < props.numScenes.toNumber()) gotoScene(sceneId + 1, 0); }\n  const prevPuzzle = () => { if (puzzleId > 0) gotoScene(sceneId, puzzleId - 1); }\n  const nextPuzzle = () => { if (puzzleId < sceneDesc.numPuzzles - 1) gotoScene(sceneId, puzzleId + 1); }\n\n  const prevSceneClass = (sceneId > 1) ? \"clickable\" : \"invalid\";\n  const nextSceneClass = (props.numScenes && (sceneId < props.numScenes.toNumber()) ? \"clickable\" : \"invalid\") || \"invalid\";\n  const prevPuzzleClass = (puzzleId > 0) ? \"clickable\" : \"invalid\";\n  const nextPuzzleClass = (puzzleId < sceneDesc.numPuzzles - 1) ? \"clickable\" : \"invalid\";\n\n  //////////////////////////////////////////////////////////////////////////////\n\n  const [puzzleTokenRow, setPuzzleTokenRow] = useState(<></>);\n  const [puzzleTileTokenRows, setPuzzleTileTokenRows] = useState(<></>);\n\n  // Anytime the puzzle or scene change, update the tile table.\n  useEffect(() => {\n    if (sceneLoading) return;\n    const puzzleTokenId = sceneDesc.puzzleTokenStart + puzzleId;\n    const tileTokenOffset = puzzleId * sceneDesc.tilesPerPuzzle\n    const tileTokenStart = sceneDesc.tileTokenStart + tileTokenOffset;\n    setPuzzleTokenRow(<Tile {...props}\n                          updateFn={updatePuzzleToken}\n                          preview={(id) => {setPreviewTokenId(id)}}\n                          type=\"puzzle\" id={puzzleTokenId}\n                          key={puzzleTokenId} />);\n    let tileRows = [];\n    for (var i = 0; i < sceneDesc.tilesPerPuzzle; i++) {\n      tileRows.push(\n        <Tile {...props}\n              preview={(id) => {setPreviewTokenId(id)}}\n              updateFn={updateOwnedTokens}\n              type=\"tile\" id={tileTokenStart+i} key={tileTokenStart+i} />\n      );\n    }\n    setPuzzleTileTokenRows(tileRows);\n  }, [puzzleId, sceneDesc, sceneLoading, props,\n      updateOwnedTokens, updatePuzzleToken]);\n\n  const [uniqueTokensOwned, setUniqueTokensOwned] = useState(0);\n  const [totalTokensLoaded, setTotalTokensLoaded] = useState(0);\n\n  useEffect(() => {\n    console.log(ownedTokens, )\n    if (!ownedTokensAllLoaded) return;\n    let count = 0;\n    for (var tok of Object.keys(ownedTokens)) {\n      const desc = ownedTokens[tok];\n      if (ownedTokens[tok].balance.gt(web3.utils.toBN(0))) {\n        count += 1;\n      }\n    }\n    const total = Object.keys(ownedTokens).length;\n    setUniqueTokensOwned(count);\n    setTotalTokensLoaded(total);\n  }, [ownedTokens, ownedTokensAllLoaded, chainId, network, user, setUniqueTokensOwned, setUniqueTokensOwned]);\n\n  //////////////////////////////////////////////////////////////////////////////\n\n  if (!estile || !user || !namer) {\n    return (\n      <div className=\"Home-main\">\n        <PageInfoPanel {...props} />\n      </div>\n    );\n  }\n\n  if (sceneLoading && props.user && props.estile) {\n    getBatchInfo(props.estile, props.user, sceneId)\n      .then((scene) => {\n        setSceneDesc(scene);\n        setSceneLoading(false);\n      });\n  }\n\n  //////////////////////////////////////////////////////////////////////////////\n\n\n  return (\n    <>\n      <MintBottleModal\n              {...props}\n              sceneId={buyTilesForSceneId}\n              updateBatchInfo={() => {setSceneLoading(false)}}\n              close={() => {setBuyBottlesForBatchId(0)}} />\n      <BottlePreviewModal\n              {...props}\n              tokenId={previewTokenId}\n              close={() => {setPreviewTokenId(0)}} />\n      <div className=\"Home-main\" style={{height: \"100%\", display: \"flex\", flexGrow: \"1\", justifyContent: \"center\"}}>\n        {sceneLoading && <Loading message={\"Scene \"+ sceneId +\" loading \"}/>}\n        {!sceneLoading &&\n          <>\n            <div className=\"title\">\n              <span>Scene</span>\n              <span className={prevSceneClass} onClick={prevScene}>&lt;</span>\n              {sceneId}\n              <span className={nextSceneClass} onClick={nextScene}>&gt;</span>\n              <span className=\"spacer\" />\n              Puzzle\n              <span className={prevPuzzleClass} onClick={prevPuzzle}>&lt;</span>\n              {puzzleId+1}\n              <span className={nextPuzzleClass} onClick={nextPuzzle}>&gt;</span>\n              <span className=\"spacer\" />\n              <span className=\"grow\"></span>\n              {puzzleToken && puzzleToken.balance && puzzleToken.balance.toNumber() > 0 &&\n                <span style={{marginRight: \"15px\"}}>solved x{puzzleToken.balance.toString()}</span>\n              }\n            </div>\n\n            <div className=\"puzzle-viewer\">\n              <div className=\"puzzle-name clickable\">\n                <div className=\"grow\" style={{width: \"100%\"}} onClick={()=>{setShowPuzzleNaming(!showPuzzleNaming)}}>\n                  \"{puzzleName}\"\n                </div>\n                {showPuzzleNaming &&\n                  <div className=\"puzzle-name-details\">\n                    <div>This puzzle currently costs {puzzleNamingCost} ESCAPE to rename.</div>\n                    <div>The last address to name the puzzle was {puzzleNamer}.</div>\n                    {puzzleToken && puzzleToken.balance && puzzleToken.balance.toNumber() > 0 &&\n                      <div className=\"puzzle-name-input\">\n                        {newPuzzleNameInput}\n                        <div className=\"clickable\" onClick={()=>{renamePuzzle(sceneId, puzzleId, newPuzzleName)}}>Rename puzzle</div>\n                      </div>\n                    }\n                    {puzzleToken && puzzleToken.balance && puzzleToken.balance.toNumber() === 0 &&\n                      <div>You must first solve the puzzle to name it.</div>\n                    }\n                  </div>\n                }\n              </div>\n              <canvas ref={canvasRef} className=\"canvas\" width=\"1920\" height=\"1080\">\n                Blocks: art on the blockchain.\n              </canvas>\n              <div className=\"puzzle-toolbar\">\n                {uniqueTokensOwned < sceneDesc.tilesPerPuzzle &&\n                <>\n                  <ProgressBar\n                    count={uniqueTokensOwned}\n                    total={sceneDesc.tilesPerPuzzle} >\n                  </ProgressBar>\n                  <div style={{marginLeft: \"8px\", fontSize: \"10pt\"}}>\n                    shards collected\n                  </div>\n                </>\n                }\n                {uniqueTokensOwned === sceneDesc.tilesPerPuzzle &&\n                <>\n                  <div className=\"clickable\" style={{marginLeft: \"15px\"}}\n                      onClick={()=>{solvePuzzle(sceneId, puzzleId)}}\n                      data-tip data-for=\"solveTooltip\">\n                    solve puzzle\n                  </div>\n                  <ReactTooltip id=\"solveTooltip\" arrowColor=\"var(--color-font)\" place=\"bottom\">\n                    <p>Merge all shards in a puzzle to<br></br>\n                      solve it and mint a rare puzzle<br></br>\n                      token.\n                    </p>\n                  </ReactTooltip>\n                </>\n                }\n                <div className=\"grow\"></div>\n                <div className=\"col clickable\" onClick={()=>{setBuyBottlesForBatchId(sceneId)}}>\n                  <img src={BuySVG} alt=\"buy shards\"></img> buy shards\n                </div>\n              </div>\n              <div className=\"token-table\">\n                <div className=\"th underline\">\n                  <div></div>\n                  <div>Balance</div>\n                  <div>Supply</div>\n                  <div>Token ID</div>\n                </div>\n                {puzzleTokenRow}\n                {puzzleTileTokenRows}\n              </div>\n            </div>\n          </>\n        }\n      </div>\n    </>\n  );\n}\n\nexport default PuzzleViewer;\n","import React, {useEffect, useState} from \"react\";\nimport { useHistory } from \"react-router\";\nimport ReactTooltip from \"react-tooltip\";\n\nimport {Loading} from \"./Loading.js\";\nimport {getAllBatchInfo, bottleImgUri } from \"./contractHelpers.js\";\nimport {MintBottleModal} from \"./Overlays.js\";\n\nimport \"./TileStore.css\";\n\nimport BuySVG from \"../svg/buy.svg\";\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar Web3 = require(\"web3\");\n\n////////////////////////////////////////////////////////////////////////////////\n\nconst TileStore = (props) => {\n  const {user, bottle, numBatches} = props;\n\n  const history = useHistory();\n  const [isLoading, setLoading] = useState(true);\n  const [batches, setBatches] = useState([]);\n  const [buyBottlesForBatchId, setBuyBottlesForBatchId] = useState(-1);\n  const [costInEther, setCostInEther] = useState(Web3.utils.fromWei(\"0\", \"ether\"));\n\n  //////////////////////////////////////////////////////////////////////////////\n\n  const gotoBatch = (bid) => {\n    history.push(\"/batch/\" + bid)\n  }\n\n  //////////////////////////////////////////////////////////////////////////////\n\n  const updateBatchInfo = async (sidx) => {\n    let desc = await getAllBatchInfo(bottle, user, sidx);\n    let found = false;\n    let _batches = batches.map((bdesc) => {\n      if (bdesc.sceneId === desc.sceneId) {\n        found = true;\n        return desc;\n      }\n      return bdesc;\n    });\n    if (found) {\n      setBatches(_batches);\n    } else {\n      setBatches(...batches, desc);\n    }\n  }\n\n  //////////////////////////////////////////////////////////////////////////////\n\n  useEffect(() => {\n    if (!bottle || !user || !numBatches) return;\n    getAllBatchInfo(bottle, user, numBatches.toNumber())\n      .then((_batches) => {\n        setBatches(_batches)\n        setLoading(false);\n      });\n  }, [isLoading, bottle, user, numBatches]);\n\n  if (isLoading) {\n    return (\n      <div className=\"info-main\">\n        <Loading message=\"Loading batches\" />\n      </div>\n    );\n  }\n\n  //////////////////////////////////////////////////////////////////////////////\n  const batchesDOM = batches.map((batch, i) => {\n    const batchId = batch.batch;\n    const cEth = Web3.utils.fromWei(batch.ethCost, \"ether\");\n    return (\n      <div key={batchId} className=\"BottleStore-pack\">\n        <div className=\"scene-list\">\n          <div className=\"pack-holder\">\n            <div className=\"pack\"\n                 onClick={()=>{}}\n                 data-tip data-for=\"packTooltip\">\n              <img className=\"bg\" src={bottleImgUri(batch.batch)} alt={batchId} />\n            </div>\n          </div>\n          <div className=\"scene-details\">\n            <div className=\"col\">\n              <div>batch #{batchId}</div>\n              <div>{batch.numBottles.toString()} / {batch.maxBottles.toString()} bottles minted</div>\n            </div>\n            <div className=\"col\">\n              <div>mint cost:</div>\n              <div>{cEth} ETH</div>\n            </div>\n            <div className=\"col\">\n              <div className=\"grow\"></div>\n              <div className=\"buy-tiles clickable\" onClick={()=>{\n                setCostInEther(cEth);\n                setBuyBottlesForBatchId(batchId);\n              }}>\n                <img src={BuySVG} alt=\"mint\"></img> mint bottle(s)\n              </div>\n            </div>\n            {/* {scene.tilesLeft.toNumber() === 0 &&\n              <div>All sold out, trade shards to solve puzzles!</div>\n            } */}\n          </div>\n        </div>\n      </div>\n    );\n  });\n\n  return (\n    <>\n        <MintBottleModal\n          bottle={props.bottle}\n          bottleWrapper={props.bottleWrapper}\n          user={props.user}\n          batchId={buyBottlesForBatchId}\n          costInEther={costInEther}\n          updateBatchInfo={updateBatchInfo}\n          close={() => {setBuyBottlesForBatchId(-1)}} />\n\n        <div className=\"BottleStore-list\">\n          <h4>Current batches</h4>\n          {batchesDOM}\n        </div>\n    </>\n  );\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nexport default TileStore;","import React, {useState} from \"react\";\nimport ReactTooltip from \"react-tooltip\";\n\nimport TileStore from \"../components/TileStore.js\";\nimport {PageInfoPanel} from \"../components/PageInfoPanel.js\";\n\n\nimport CollectSVG from \"../svg/collect.svg\";\nimport SolveSVG from \"../svg/puzzle.svg\";\nimport EarnSVG from \"../svg/salary.svg\";\n\n\nconst Batches = (props) => {\n  const {active, connected, contractsLoaded, user} = props;\n\n  return (\n    <div className=\"BottleStore-main\">\n      <div className=\"tooltips\">\n        <ReactTooltip id=\"infoEscapeTooltip\" arrowColor=\"var(--color-font)\">\n          <p><span role=\"img\" aria-label=\"burn\">🔥</span> Mint bottles from available batches.</p>\n          <p><span role=\"img\" aria-label=\"burn\">🔥</span> Sell or Trade bottle NFTs.</p>\n        </ReactTooltip>\n      </div>\n      <div className=\"Batches-main\">\n        <br></br>\n        {!(active && connected && user && contractsLoaded) &&\n          <PageInfoPanel {...props} />\n        }\n        {active && connected && user && contractsLoaded &&\n          <TileStore {...props} />\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default Batches;\n","import React, {useState} from \"react\";\n\nconst FAQSection = (props) => {\n  const [show, setShow] = useState(props.open || false);\n  const glyph = show ? \"[-]\" : \"[+]\";\n  return (\n    <div className=\"faq-section\">\n      <div className=\"faq-question\" onClick={() => {setShow(!show)}}>\n        {props.question}\n        <span className=\"grow\"></span>\n        <span style={{marginRight: \"50px\"}} className=\"clickable\">{glyph}</span>\n      </div>\n      {show && <div className=\"faq-body\">{props.children}</div>}\n    </div>\n  );\n}\n\nconst About = () => {\n  return (\n    <div className=\"faq-main\">\n      <FAQSection question=\"What is this all about?\" open={true}>\n        <p>\n          Craate NFT is a brand new platform bridging the divide between physical\n          bottles in the real world, and NFT representations of the same!\n        </p>\n        <p>\n          Buy, sell and trade bottles today!\n        </p>\n      </FAQSection>\n\n      <FAQSection question=\"How does it work?\">\n        <p>\n          Each batch of bottles has a limited number of bottles, each with their\n          own perks.\n        </p>\n        <p>\n          Batches are owned by the vineyard that wishes to sell NFTs of their\n          bottles on our platform.\n        </p>\n      </FAQSection>\n\n      <FAQSection question=\"Other market integration?\">\n        <p>\n          All bottle NFTs are tradeable freely on our own platform, as well as\n          3rd party platforms like OpenSea and Rarible.\n        </p>\n      </FAQSection>\n\n      <FAQSection question=\"Can I see the code?\">\n        <p>\n          All of the code involved in this project is available on GitHub and is\n          100% open source. Check out our\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/craate-nft\">GitHub project page</a> for more info.\n        </p>\n        <p>\n          We love feedback, and would appreciate your thoughts either in our\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://discord.gg/craate-nft\">Discord</a>,\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://reddit.com/r/craate-nft\">Reddit</a>,\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/craate-nft\">GitHub</a> channels.\n        </p>\n      </FAQSection>\n    </div>\n  );\n}\n\nexport default About;\n","import React from \"react\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\n\nimport PuzzleViewer from \"./PuzzleViewer.js\";\nimport Batches from \"./Batches.js\";\nimport Bottle from \"./Bottle.js\";\n\nimport About from \"./About.js\";\n\nconst Redirect = (props) => {\n  let history = useHistory();\n  const {to} = props;\n  history.push(to);\n  return <></>;\n}\n\nconst MainLayout = (props) => {\n  return (\n    <Switch>\n      {/* The Switch decides which component to show based on the current URL.*/}\n      <Route exact path=\"/\">\n        <Batches page=\"Home\" {...props} />\n      </Route>\n      <Route exact path=\"/about\">\n        <About></About>\n      </Route>\n      <Route exact path=\"/scene/:sid/puzzle/:pid\">\n        <PuzzleViewer page=\"PuzzleViewer\" {...props} />\n      </Route>\n      <Route exact path=\"/shard/:id\">\n        <Bottle page=\"Bottle\" {...props} />\n      </Route>\n      <Route path=\"*\">\n        <Redirect to=\"/\" />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default MainLayout;","import React from \"react\";\n\nimport RedditSVG from \"../svg/reddit.svg\";\nimport DiscordSVG from \"../svg/discord.svg\";\nimport GitHubSVG from \"../svg/github.svg\";\nimport TwitterSVG from \"../svg/twitter.svg\";\n\nexport const Footer = (props) => {\n  return (\n    <div className=\"footer\">\n      <span>© Craate-NFT Inc</span>\n      <span className=\"grow\"></span>\n      <a target=\"_blank\" rel=\"noopener noreferrer\" className=\"reddit\" href=\"https://www.reddit.com/r/Craate-NFT\"><span><img src={RedditSVG} alt=\"github\"></img></span></a>\n      <a target=\"_blank\" rel=\"noopener noreferrer\" className=\"discord\" href=\"https://discord.gg/craate-nft\"><span><img src={DiscordSVG} alt=\"github\"></img></span></a>\n      <a target=\"_blank\" rel=\"noopener noreferrer\" className=\"twitter\" href=\"https://twitter.com/craate-nft\"><span><img src={TwitterSVG} alt=\"twitter\"></img></span></a>\n      <a target=\"_blank\" rel=\"noopener noreferrer\" className=\"github\" href=\"https://github.com/craate-nft/contract\"><span><img src={GitHubSVG} alt=\"github\"></img></span></a>\n    </div>\n  );\n}","import { InjectedConnector } from '@web3-react/injected-connector'\n\nconst POLLING_INTERVAL = 12000\n\nexport const injected = new InjectedConnector({ supportedChainIds: [1, 3, 4, 5, 42] })\n","/*\n *  Entry-point for the Craate-NFT frontend.\n */\n\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport ReactTooltip from \"react-tooltip\";\n\nimport Web3 from \"web3\";\n\nimport MainLayout from \"./pages/MainLayout.js\";\nimport {Footer} from \"./components/Footer.js\";\n\n// Contract ABIs.\nimport _Bottle from \"./contract/Bottle.json\";\nimport _BottleWrapper from \"./contract/BottleWrapper.json\";\n\nimport { injected } from './components/Connectors.ts';\nimport { useWeb3React } from \"@web3-react/core\";\n\nimport { useEagerConnect, useInactiveListener } from \"./components/Hooks.ts\";\n\n////////////////////////////////////////////////////////////////////////////////\n\nimport \"./App.css\";\nimport { getNetwork } from \"@ethersproject/networks\";\n\n////////////////////////////////////////////////////////////////////////////////\n\nconst toBN = Web3.utils.toBN;\n\n////////////////////////////////////////////////////////////////////////////////\n\nconst prettyfyAddress = (acct, size) => {\n  if (!acct) return \"INVALID\";\n  const s = acct.substring(0, 2+size);\n  const e = acct.substring(acct.length-4, acct.length);\n  return s + \"...\" + e;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nconst App = (props) => {\n  const context = useWeb3React();\n  const { connector, chainId, account, activate, active, error } = context;\n\n  const network = getNetwork(chainId);\n  const networkName = (network && network.name) || \"unknown\";\n  const prettyAddress = prettyfyAddress(account, 4);\n\n  // handle logic to recognize the connector currently being activated\n  const [activatingConnector, setActivatingConnector] = React.useState();\n  React.useEffect(() => {\n    if (activatingConnector && activatingConnector === connector) {\n      setActivatingConnector(undefined);\n    }\n  }, [activatingConnector, connector]);\n\n  // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\n  const triedEager = useEagerConnect();\n\n  // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\n  useInactiveListener(!triedEager || !!activatingConnector);\n  const [contractsLoaded, setContractsLoaded] = useState(false);\n  const [numBatches, setNumBatches] = useState(0);\n\n  const [bottle, setBottleContract] = useState(undefined);\n  const [bottleWrapper, setBottleWrapperContract] = useState(undefined);\n\n  // If the chain changes, update the UI by taking over the contractsLoaded boolean.\n  useEffect(() => {\n    setContractsLoaded(false);\n  }, [chainId])\n\n  // If the chain changes, update all the contract ABIs.\n  useEffect(() => {\n    async function setupContracts() {\n      const contract = require(\"@truffle/contract\");\n\n      let BottleABI = contract(_Bottle);\n      let BottleWrapperABI = contract(_BottleWrapper);\n\n      BottleABI.setProvider(window.web3.currentProvider);\n      BottleWrapperABI.setProvider(window.web3.currentProvider);\n\n      const cBottle = await BottleABI.deployed();\n      const cBottleWrapper = await BottleWrapperABI.deployed();\n\n      setBottleContract(cBottle);\n      setBottleWrapperContract(cBottleWrapper);\n      setContractsLoaded(true);\n    }\n    setupContracts();\n  }, [chainId, setBottleWrapperContract, setBottleContract, setContractsLoaded]);\n\n  // If the chian or the user or the contracts change, update the balances and\n  // the scene data.\n  useEffect(() => {\n    console.log(bottle)\n    console.log(account)\n    if (!(bottle && account)) return;\n\n    const setupBalances = async () => {\n      setNumBatches(await bottle.batchCount());\n    }\n\n    bottle.allEvents()\n      .on(\"data\", (e) => {\n        console.log(e);\n      })\n      .on(\"error\", (err) => {\n        console.log(\"error\", err);\n      });\n\n    setupBalances()\n      .catch(console.error);\n\n  }, [account, bottle, chainId, setNumBatches])\n\n  // Callback to force wallet connection.\n  const connectInjectedWallet = useCallback(() => {\n    setActivatingConnector(injected)\n    activate(injected);\n  }, [setActivatingConnector, activate]);\n\n  // Activating - the wallet is attempting to open.\n  const activating = injected === activatingConnector;\n\n  // Connected - the account is connected.\n  const connected = injected === connector;\n  const appStatus = !connected ? \"not connected\" : (networkName+\" : \"+prettyAddress);\n\n  ////////////////////////////////////////////////////////////////////////////\n  return (\n    <div className=\"App\">\n\n      <div className=\"App-header\">\n        <NavLink exact activeClassName=\"isActive\" to=\"/\" data-tip data-for=\"networkInfoTooltip\">\n          Craate NFT\n        </NavLink>\n        <NavLink exact activeClassName=\"isActive\" to=\"/about\">FAQ</NavLink>\n        <div className=\"grow\"></div>\n        <ReactTooltip id=\"networkInfoTooltip\" arrowColor=\"var(--color-font)\" place=\"bottom\">\n          <p>{appStatus}</p>\n        </ReactTooltip>\n      </div>\n\n      <div className=\"App-body\">\n        <div className=\"App-scroll\">\n          <div style={{flexGrow: 1}}>\n            <MainLayout\n              connectWallet={connectInjectedWallet}\n              connected={connected} activating={activating} active={active}\n              numBatches={numBatches} contractsLoaded={contractsLoaded}\n              user={account} chainId={chainId}\n              bottle={bottle} bottleWrapper={bottleWrapper}\n              error={error}\n            />\n          </div>\n          <Footer style={{marginBottom: \"5px\"}}/>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nexport default App;\n\n////////////////////////////////////////////////////////////////////////////////\n","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\n\nimport { injected } from './Connectors';\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3React()\n\n  const [tried, setTried] = useState(false)\n\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized: boolean) => {\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true)\n        })\n      } else {\n        setTried(true)\n      }\n    })\n  }, []) // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true)\n    }\n  }, [tried, active])\n\n  return tried\n}\n\nexport function useInactiveListener(suppress: boolean = false) {\n  const { active, error, activate } = useWeb3React()\n\n  useEffect((): any => {\n    const { ethereum } = window as any\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleConnect = () => {\n        console.log(\"Handling 'connect' event\")\n        activate(injected)\n      }\n      const handleChainChanged = (chainId: string | number) => {\n        console.log(\"Handling 'chainChanged' event with payload\", chainId)\n        activate(injected)\n      }\n      const handleAccountsChanged = (accounts: string[]) => {\n        console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n        if (accounts.length > 0) {\n          activate(injected)\n        }\n      }\n      const handleNetworkChanged = (networkId: string | number) => {\n        console.log(\"Handling 'networkChanged' event with payload\", networkId)\n        activate(injected)\n      }\n\n      ethereum.on('connect', handleConnect)\n      ethereum.on('chainChanged', handleChainChanged)\n      ethereum.on('accountsChanged', handleAccountsChanged)\n      ethereum.on('networkChanged', handleNetworkChanged)\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('connect', handleConnect)\n          ethereum.removeListener('chainChanged', handleChainChanged)\n          ethereum.removeListener('accountsChanged', handleAccountsChanged)\n          ethereum.removeListener('networkChanged', handleNetworkChanged)\n        }\n      }\n    }\n  }, [active, error, suppress, activate])\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nimport { Web3ReactProvider } from \"@web3-react/core\";\nimport { Web3Provider } from \"@ethersproject/providers\";\n\nfunction getLibrary(provider) {\n  const library = new Web3Provider(provider)\n  library.pollingInterval = 12000\n  return library\n}\n\nReactDOM.render((\n  <HashRouter>\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <App />\n    </Web3ReactProvider>\n  </HashRouter>\n), document.getElementById(\"root\"));\n\nregisterServiceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/buy.fcafa681.svg\";","module.exports = __webpack_public_path__ + \"static/media/opensea-logo.91c20fca.svg\";","module.exports = __webpack_public_path__ + \"static/media/reddit.1dee27c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/discord.e2217522.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.31145889.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter.3ad6654a.svg\";","module.exports = __webpack_public_path__ + \"static/media/collect.25b81051.svg\";","module.exports = __webpack_public_path__ + \"static/media/puzzle.79cd76ae.svg\";","module.exports = __webpack_public_path__ + \"static/media/salary.c4c37578.svg\";"],"sourceRoot":""}